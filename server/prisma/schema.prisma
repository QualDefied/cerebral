generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model Budget {
  id         String   @id @default(cuid())
  category   String   // "FOOD_DINING" | "TRANSPORTATION" | etc.
  amount     Decimal
  period     String   // "monthly" | "weekly" | "yearly"
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("budgets")
}

model Debt {
  id            String   @id @default(cuid())
  name          String
  balance       Decimal
  interestRate  Decimal
  minimumPayment Decimal
  dueDate       DateTime?
  type          String   // "credit_card" | "loan" | "mortgage" | "other"
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("debts")
}

model CreditCard {
  id            String   @id @default(cuid())
  name          String
  lastFourDigits String
  creditLimit   Decimal
  currentBalance Decimal  @default(0)
  apr           Decimal
  dueDate       DateTime?
  rewardsProgram String?
  pointsBalance  Int      @default(0)
  rewardType    String?  @default("points")
  bank          String?
  cashbackRate   Decimal? @default(0)
  annualFee      Decimal  @default(0)
  minimumPaymentPercentage Decimal @default(0.02)
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("credit_cards")
}

model CryptoAsset {
  id            String   @id @default(cuid())
  symbol        String   // BTC, ETH, ADA, etc.
  quantity      Decimal  @default(0)
  averageCost   Decimal  @default(0) // Average cost per unit in USD
  currentPrice  Decimal  @default(0) // Current market price in USD
  platform      String?  // Coinbase, Binance, Hardware Wallet, etc.
  walletAddress String?  // Optional wallet address
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("crypto_assets")
}

model UserGoals {
  id                    String   @id @default(cuid())
  primaryGoal           String   // "debt_payoff" | "emergency_fund" | "investment" | "retirement" | "major_purchase"
  secondaryGoals        String?  // JSON array of additional goals
  targetSavingsRate     Decimal? // Percentage of income to save
  emergencyFundTarget   Decimal? // Target emergency fund amount
  debtPayoffTimeframe   Int?     // Months to pay off debt
  riskTolerance         String?  // "conservative" | "moderate" | "aggressive"
  monthlyIncome         Decimal? // Monthly gross income
  monthlyExpenses       Decimal? // Monthly fixed expenses
  retirementAge         Int?     // Target retirement age
  majorPurchaseTarget   String?  // Description of major purchase goal
  majorPurchaseAmount   Decimal? // Target amount for major purchase
  majorPurchaseTimeframe Int?    // Months to reach major purchase goal
  notes                 String?  // Additional context and preferences
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("user_goals")
}


